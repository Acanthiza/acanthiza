<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data on Acanthiza</title>
    <link>/categories/data/</link>
    <description>Recent content in Data on Acanthiza</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/data/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Geometry</title>
      <link>/post/2018-11-08-geometry/</link>
      <pubDate>Thu, 08 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018-11-08-geometry/</guid>
      <description>Baffled by bike geometry? So am I, so don’t look for answers here. But here’s how I’ve helped myself scratch the surface of understanding…
The main guide for the important numbers to chase was this CylingTips article. Gaps in geometry were filled in using this bike geometry calculator. There’s also geometrygeeks.com providing good explanations of what each term means a good.
Analysing geometries accumulated from the web gives Figure 1.</description>
    </item>
    
    <item>
      <title>My rides</title>
      <link>/post/20170714_rides/</link>
      <pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/20170714_rides/</guid>
      <description>Data from my rides have been scattered in several places. Through the years I moved from Excel to Access to Ascent to Strava to store ride data. Recently the following have provided the potential to make combining these data easy:
 workflow, particularly with  tidyverse rmarkdown  apps to rip data out of MS Access databases from a mac mdb accdb Viewer the export .csv button on most pages on Veloviewer  This is the piecing together and exploration of those data.</description>
    </item>
    
  </channel>
</rss>